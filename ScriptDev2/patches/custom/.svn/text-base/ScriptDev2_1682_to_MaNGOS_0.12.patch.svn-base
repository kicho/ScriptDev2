Index: include/precompiled.h
===================================================================
--- include/precompiled.h	(revision 1682)
+++ include/precompiled.h	(working copy)
@@ -11,6 +11,11 @@
 #include "sc_grid_searchers.h"
 #include "sc_instance.h"
 
+enum backports
+{
+    UNIT_VIRTUAL_ITEM_SLOT_ID = UNIT_VIRTUAL_ITEM_SLOT_DISPLAY
+};
+
 #ifdef WIN32
 #include <windows.h>
 BOOL APIENTRY DllMain( HANDLE hModule,
Index: include/sc_creature.cpp
===================================================================
--- include/sc_creature.cpp	(revision 1682)
+++ include/sc_creature.cpp	(working copy)
@@ -452,7 +452,7 @@
     Unit* pUnit = NULL;
 
     MaNGOS::MostHPMissingInRange u_check(m_creature, fRange, uiMinHPDiff);
-    MaNGOS::UnitLastSearcher<MaNGOS::MostHPMissingInRange> searcher(m_creature, pUnit, u_check);
+    MaNGOS::UnitLastSearcher<MaNGOS::MostHPMissingInRange> searcher(pUnit, u_check);
 
     Cell::VisitGridObjects(m_creature, searcher, fRange);
 
@@ -464,7 +464,7 @@
     std::list<Creature*> pList;
 
     MaNGOS::FriendlyCCedInRange u_check(m_creature, fRange);
-    MaNGOS::CreatureListSearcher<MaNGOS::FriendlyCCedInRange> searcher(m_creature, pList, u_check);
+    MaNGOS::CreatureListSearcher<MaNGOS::FriendlyCCedInRange> searcher(pList, u_check);
 
     Cell::VisitGridObjects(m_creature, searcher, fRange);
 
@@ -476,7 +476,7 @@
     std::list<Creature*> pList;
 
     MaNGOS::FriendlyMissingBuffInRange u_check(m_creature, fRange, uiSpellId);
-    MaNGOS::CreatureListSearcher<MaNGOS::FriendlyMissingBuffInRange> searcher(m_creature, pList, u_check);
+    MaNGOS::CreatureListSearcher<MaNGOS::FriendlyMissingBuffInRange> searcher(pList, u_check);
 
     Cell::VisitGridObjects(m_creature, searcher, fRange);
 
@@ -488,7 +488,7 @@
     Player* pPlayer = NULL;
 
     MaNGOS::AnyPlayerInObjectRangeCheck check(m_creature, fMinimumRange);
-    MaNGOS::PlayerSearcher<MaNGOS::AnyPlayerInObjectRangeCheck> searcher(m_creature, pPlayer, check);
+    MaNGOS::PlayerSearcher<MaNGOS::AnyPlayerInObjectRangeCheck> searcher(pPlayer, check);
 
     Cell::VisitGridObjects(m_creature, searcher, fMinimumRange);
 
Index: include/sc_gossip.h
===================================================================
--- include/sc_gossip.h	(revision 1682)
+++ include/sc_gossip.h	(working copy)
@@ -42,9 +42,7 @@
 #define GOSSIP_TEXT_WARSONGULCH         "Warsong Gulch"
 #define GOSSIP_TEXT_ARENA               "Arena"
 #define GOSSIP_TEXT_EYEOFTHESTORM       "Eye of The Storm"
-#define GOSSIP_TEXT_STRANDOFANCIENT     "Strand of the Ancients"
 
-#define GOSSIP_TEXT_DEATH_KNIGHT        "Death Knight"
 #define GOSSIP_TEXT_DRUID               "Druid"
 #define GOSSIP_TEXT_HUNTER              "Hunter"
 #define GOSSIP_TEXT_PRIEST              "Priest"
@@ -63,12 +61,12 @@
 #define GOSSIP_TEXT_FIRSTAID            "First Aid"
 #define GOSSIP_TEXT_HERBALISM           "Herbalism"
 #define GOSSIP_TEXT_LEATHERWORKING      "Leatherworking"
+#define GOSSIP_TEXT_POISONS             "Poisons"
 #define GOSSIP_TEXT_TAILORING           "Tailoring"
 #define GOSSIP_TEXT_MINING              "Mining"
 #define GOSSIP_TEXT_FISHING             "Fishing"
 #define GOSSIP_TEXT_SKINNING            "Skinning"
 #define GOSSIP_TEXT_JEWELCRAFTING       "Jewelcrafting"
-#define GOSSIP_TEXT_INSCRIPTION         "Inscription"
 
 enum
 {
@@ -87,7 +85,6 @@
     TRADESKILL_FISHING             = 12,
     TRADESKILL_SKINNING            = 13,
     TRADESKILL_JEWLCRAFTING        = 14,
-    TRADESKILL_INSCRIPTION         = 15,
 
     TRADESKILL_LEVEL_NONE          = 0,
     TRADESKILL_LEVEL_APPRENTICE    = 1,
@@ -95,7 +92,6 @@
     TRADESKILL_LEVEL_EXPERT        = 3,
     TRADESKILL_LEVEL_ARTISAN       = 4,
     TRADESKILL_LEVEL_MASTER        = 5,
-    TRADESKILL_LEVEL_GRAND_MASTER  = 6,
 
     // Gossip defines
     GOSSIP_ACTION_TRADE            = 1,
Index: include/sc_grid_searchers.cpp
===================================================================
--- include/sc_grid_searchers.cpp	(revision 1682)
+++ include/sc_grid_searchers.cpp	(working copy)
@@ -10,7 +10,7 @@
     GameObject* pGo = NULL;
 
     MaNGOS::NearestGameObjectEntryInObjectRangeCheck go_check(*pSource, uiEntry, fMaxSearchRange);
-    MaNGOS::GameObjectLastSearcher<MaNGOS::NearestGameObjectEntryInObjectRangeCheck> searcher(pSource, pGo, go_check);
+    MaNGOS::GameObjectLastSearcher<MaNGOS::NearestGameObjectEntryInObjectRangeCheck> searcher(pGo, go_check);
 
     Cell::VisitGridObjects(pSource, searcher, fMaxSearchRange);
 
@@ -23,7 +23,7 @@
     Creature* pCreature = NULL;
 
     MaNGOS::NearestCreatureEntryWithLiveStateInObjectRangeCheck creature_check(*pSource, uiEntry, true, fMaxSearchRange);
-    MaNGOS::CreatureLastSearcher<MaNGOS::NearestCreatureEntryWithLiveStateInObjectRangeCheck> searcher(pSource, pCreature, creature_check);
+    MaNGOS::CreatureLastSearcher<MaNGOS::NearestCreatureEntryWithLiveStateInObjectRangeCheck> searcher(pCreature, creature_check);
 
     Cell::VisitGridObjects(pSource, searcher, fMaxSearchRange);
 
@@ -33,7 +33,7 @@
 void GetGameObjectListWithEntryInGrid(std::list<GameObject*>& lList , WorldObject* pSource, uint32 uiEntry, float fMaxSearchRange)
 {
     AllGameObjectsWithEntryInRange check(pSource, uiEntry, fMaxSearchRange);
-    MaNGOS::GameObjectListSearcher<AllGameObjectsWithEntryInRange> searcher(pSource, lList, check);
+    MaNGOS::GameObjectListSearcher<AllGameObjectsWithEntryInRange> searcher(lList, check);
 
     Cell::VisitGridObjects(pSource, searcher, fMaxSearchRange);
 }
@@ -41,7 +41,7 @@
 void GetCreatureListWithEntryInGrid(std::list<Creature*>& lList, WorldObject* pSource, uint32 uiEntry, float fMaxSearchRange)
 {
     AllCreaturesOfEntryInRange check(pSource, uiEntry, fMaxSearchRange);
-    MaNGOS::CreatureListSearcher<AllCreaturesOfEntryInRange> searcher(pSource, lList, check);
+    MaNGOS::CreatureListSearcher<AllCreaturesOfEntryInRange> searcher(lList, check);
 
     Cell::VisitGridObjects(pSource, searcher, fMaxSearchRange);
 }
Index: scripts/eastern_kingdoms/karazhan/boss_prince_malchezaar.cpp
===================================================================
--- scripts/eastern_kingdoms/karazhan/boss_prince_malchezaar.cpp	(revision 1682)
+++ scripts/eastern_kingdoms/karazhan/boss_prince_malchezaar.cpp	(working copy)
@@ -90,7 +90,8 @@
 #define INFERNAL_MODEL_INVISIBLE    11686                   //Infernal Effects
 #define SPELL_INFERNAL_RELAY        30834
 
-#define EQUIP_ID_AXE                33542                   //Axes info
+#define AXE_EQUIP_MODEL          40066                      //Axes info
+#define AXE_EQUIP_INFO           33448898
 
 //---------Infernal code first
 struct MANGOS_DLL_DECL netherspite_infernalAI : public ScriptedAI
@@ -269,7 +270,10 @@
 
     void ClearWeapons()
     {
-        SetEquipmentSlots(false, EQUIP_UNEQUIP, EQUIP_UNEQUIP, EQUIP_NO_CHANGE);
+        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 0);
+        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO, 0);
+        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, 0);
+        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+2, 0);
 
         //damage
         const CreatureInfo *cinfo = m_creature->GetCreatureInfo();
@@ -407,7 +411,10 @@
                 m_creature->CastSpell(m_creature, SPELL_THRASH_AURA, true);
 
                 //models
-                SetEquipmentSlots(false, EQUIP_ID_AXE, EQUIP_ID_AXE, EQUIP_NO_CHANGE);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, AXE_EQUIP_MODEL);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO, AXE_EQUIP_INFO);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, AXE_EQUIP_MODEL);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+2, AXE_EQUIP_INFO);
 
                 //damage
                 const CreatureInfo *cinfo = m_creature->GetCreatureInfo();
@@ -445,6 +452,8 @@
                     Creature *axe = m_creature->SummonCreature(MALCHEZARS_AXE, m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), 0, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 1000);
                     if (axe)
                     {
+                        axe->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, AXE_EQUIP_MODEL);
+                        axe->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO, AXE_EQUIP_INFO);
                         axe->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
                         axe->setFaction(m_creature->getFaction());
 
Index: scripts/eastern_kingdoms/shadowfang_keep/shadowfang_keep.cpp
===================================================================
--- scripts/eastern_kingdoms/shadowfang_keep/shadowfang_keep.cpp	(revision 1682)
+++ scripts/eastern_kingdoms/shadowfang_keep/shadowfang_keep.cpp	(working copy)
@@ -91,10 +91,10 @@
                 else
                     DoScriptText(EMOTE_UNLOCK_DOOR_AD, m_creature);
                 break;
-            case 12:
-                if (m_uiNpcEntry != NPC_ASH)
-                    m_creature->HandleEmoteCommand(EMOTE_ONESHOT_USESTANDING);
-                break;
+//            case 12:
+//                if (m_uiNpcEntry != NPC_ASH)
+//                    m_creature->HandleEmoteCommand(EMOTE_ONESHOT_USESTANDING);
+//                break;
             case 13:
                 if (m_uiNpcEntry == NPC_ASH)
                     DoScriptText(SAY_POST_DOOR_AS, m_creature);
Index: scripts/eastern_kingdoms/zulgurub/boss_renataki.cpp
===================================================================
--- scripts/eastern_kingdoms/zulgurub/boss_renataki.cpp	(revision 1682)
+++ scripts/eastern_kingdoms/zulgurub/boss_renataki.cpp	(working copy)
@@ -27,8 +27,6 @@
 #define SPELL_AMBUSH            24337
 #define SPELL_THOUSANDBLADES    24649
 
-#define EQUIP_ID_MAIN_HAND      0                           //was item display id 31818, but this id does not exist
-
 struct MANGOS_DLL_DECL boss_renatakiAI : public ScriptedAI
 {
     boss_renatakiAI(Creature* pCreature) : ScriptedAI(pCreature) {Reset();}
@@ -64,10 +62,13 @@
         {
             m_creature->InterruptSpell(CURRENT_GENERIC_SPELL);
 
-            SetEquipmentSlots(false, EQUIP_UNEQUIP, EQUIP_NO_CHANGE, EQUIP_NO_CHANGE);
             m_creature->SetDisplayId(11686);
 
+            m_creature->SetUInt32Value( UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 0);
+            m_creature->SetUInt32Value( UNIT_VIRTUAL_ITEM_INFO , 218171138);
+            m_creature->SetUInt32Value( UNIT_VIRTUAL_ITEM_INFO  + 1, 3);
             m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+            m_creature->SetUInt32Value(UNIT_FIELD_DISPLAYID,11686);
             Invisible = true;
 
             Invisible_Timer = urand(15000, 30000);
@@ -95,9 +96,12 @@
                 m_creature->InterruptSpell(CURRENT_GENERIC_SPELL);
 
                 m_creature->SetDisplayId(15268);
-                SetEquipmentSlots(false, EQUIP_ID_MAIN_HAND, EQUIP_NO_CHANGE, EQUIP_NO_CHANGE);
 
                 m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+                m_creature->SetUInt32Value( UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 31818);
+                m_creature->SetUInt32Value( UNIT_VIRTUAL_ITEM_INFO , 218171138);
+                m_creature->SetUInt32Value( UNIT_VIRTUAL_ITEM_INFO  + 1, 3);
+                m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
                 Invisible = false;
 
                 Visible_Timer = 4000;
Index: scripts/kalimdor/azuremyst_isle.cpp
===================================================================
--- scripts/kalimdor/azuremyst_isle.cpp	(revision 1682)
+++ scripts/kalimdor/azuremyst_isle.cpp	(working copy)
@@ -76,7 +76,6 @@
 
         m_creature->CastSpell(m_creature, SPELL_IRRIDATION, true);
 
-        m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PVP_ATTACKABLE);
         m_creature->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_IN_COMBAT);
         m_creature->SetHealth(int(m_creature->GetMaxHealth()*.1));
         m_creature->SetStandState(UNIT_STAND_STATE_SLEEP);
@@ -103,9 +102,8 @@
 
     void SpellHit(Unit* pCaster, const SpellEntry* pSpell)
     {
-        if (pSpell->SpellFamilyFlags2 & 0x080000000)
+        if (pSpell->Id == 28880)
         {
-            m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PVP_ATTACKABLE);
             m_creature->SetStandState(UNIT_STAND_STATE_STAND);
 
             m_creature->CastSpell(m_creature, SPELL_STUNNED, true);
Index: scripts/kalimdor/caverns_of_time/old_hillsbrad/old_hillsbrad.cpp
===================================================================
--- scripts/kalimdor/caverns_of_time/old_hillsbrad/old_hillsbrad.cpp	(revision 1682)
+++ scripts/kalimdor/caverns_of_time/old_hillsbrad/old_hillsbrad.cpp	(working copy)
@@ -158,8 +158,10 @@
 #define SPEED_RUN                   (1.0f)
 #define SPEED_MOUNT                 (1.6f)
 
-#define EQUIP_ID_WEAPON             927
-#define EQUIP_ID_SHIELD             20913
+#define THRALL_WEAPON_MODEL         22106
+#define THRALL_WEAPON_INFO          218169346
+#define THRALL_SHIELD_MODEL         18662
+#define THRALL_SHIELD_INFO          234948100
 #define THRALL_MODEL_UNEQUIPPED     17292
 #define THRALL_MODEL_EQUIPPED       18165
 
@@ -232,7 +234,12 @@
                 break;
             case 9:
                 DoScriptText(SAY_TH_ARMORY, m_creature);
-                SetEquipmentSlots(false, EQUIP_ID_WEAPON, EQUIP_ID_SHIELD, EQUIP_NO_CHANGE);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, THRALL_WEAPON_MODEL);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO, THRALL_WEAPON_INFO);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+1, 781);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, THRALL_SHIELD_MODEL);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+2, THRALL_SHIELD_INFO);
+                m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+3, 1038);
                 break;
             case 10:
                 m_creature->SetDisplayId(THRALL_MODEL_EQUIPPED);
@@ -386,7 +393,12 @@
         {
             DoUnmount();
             HadMount = false;
-            SetEquipmentSlots(true);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 0);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO, 0);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+1, 0);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, 0);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+2, 0);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_INFO+3, 0);
             m_creature->SetDisplayId(THRALL_MODEL_UNEQUIPPED);
         }
 
Index: scripts/northrend/dragonblight.cpp
===================================================================
--- scripts/northrend/dragonblight.cpp	(revision 1682)
+++ scripts/northrend/dragonblight.cpp	(working copy)
@@ -101,7 +101,6 @@
     if (uiAction == GOSSIP_ACTION_INFO_DEF+1)
     {
         pPlayer->CLOSE_GOSSIP_MENU();
-        pPlayer->SendMovieStart(MOVIE_ID_GATES);
     }
 
     return true;
Index: scripts/outland/auchindoun/auchenai_crypts/boss_exarch_maladaar.cpp
===================================================================
--- scripts/outland/auchindoun/auchenai_crypts/boss_exarch_maladaar.cpp	(revision 1682)
+++ scripts/outland/auchindoun/auchenai_crypts/boss_exarch_maladaar.cpp	(working copy)
@@ -107,10 +107,6 @@
                     DoCastSpellIfCan(m_creature->getVictim(), SPELL_MOONFIRE);
                     m_uiSpellTimer = 10000;
                     break;
-                case CLASS_DEATH_KNIGHT:
-                    DoCastSpellIfCan(m_creature->getVictim(), SPELL_PLAGUE_STRIKE);
-                    m_uiSpellTimer = 10000;
-                    break;
             }
         }
         else
Index: scripts/outland/black_temple/boss_illidan.cpp
===================================================================
--- scripts/outland/black_temple/boss_illidan.cpp	(revision 1682)
+++ scripts/outland/black_temple/boss_illidan.cpp	(working copy)
@@ -206,9 +206,6 @@
 #define CENTER_Y            305.297f
 #define CENTER_Z            353.192f
 
-#define EQUIP_ID_MAIN_HAND  32837
-#define EQUIP_ID_OFF_HAND   32838
-
 /*** Phase Names ***/
 enum Phase
 {
@@ -976,10 +973,9 @@
         m_creature->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
 
         // Unequip warglaives if needed
-        SetEquipmentSlots(false, EQUIP_UNEQUIP, EQUIP_UNEQUIP, EQUIP_NO_CHANGE);
 
         m_creature->RemoveSplineFlag(SPLINEFLAG_NO_SPLINE);
-
+        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 0);
         IsTalking = false;
 
         TalkCount = 0;
@@ -1226,12 +1222,14 @@
         if (DemonTransformation[count].equip)
         {
             // Requip warglaives if needed
-            SetEquipmentSlots(false, EQUIP_ID_MAIN_HAND, EQUIP_ID_OFF_HAND, EQUIP_NO_CHANGE);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 45479);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, 45481);
         }
         else
         {
             // Unequip warglaives if needed
-            SetEquipmentSlots(false, EQUIP_UNEQUIP, EQUIP_UNEQUIP, EQUIP_NO_CHANGE);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 0);
+            m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, 0);
         }
 
         if (DemonTransformation[count].phase != 8)
@@ -1304,7 +1302,8 @@
 
         // We no longer wear the glaives!
         // since they are now channeling the flames (or will be)
-        SetEquipmentSlots(false, EQUIP_UNEQUIP, EQUIP_UNEQUIP, EQUIP_NO_CHANGE);
+        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 0);
+        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, 0);
 
         for(uint8 i = 0; i < 2; ++i)
         {
@@ -1437,7 +1436,8 @@
                         break;
                     case 8:
                         // Equip our warglaives!
-                        SetEquipmentSlots(false, EQUIP_ID_MAIN_HAND, EQUIP_ID_OFF_HAND, EQUIP_NO_CHANGE);
+                        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 45479);
+                        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, 45481);
                         // Hostile if we weren't before
                         m_creature->setFaction(14);
                         break;
@@ -1700,7 +1700,8 @@
                         }
 
                         // Re-equip our warblades!
-                        SetEquipmentSlots(false, EQUIP_ID_MAIN_HAND, EQUIP_ID_OFF_HAND, EQUIP_NO_CHANGE);
+                        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY, 45479);
+                        m_creature->SetUInt32Value(UNIT_VIRTUAL_ITEM_SLOT_DISPLAY+1, 45481);
 
                         // Prepare for landin'!
                         LandTimer = 5000;
Index: scripts/world/item_scripts.cpp
===================================================================
--- scripts/world/item_scripts.cpp	(revision 1682)
+++ scripts/world/item_scripts.cpp	(working copy)
@@ -48,7 +48,7 @@
     pPlayer->SendEquipError(EQUIP_ERR_NONE, pItem, NULL);
 
     if (const SpellEntry* pSpellInfo = GetSpellStore()->LookupEntry(SPELL_ARCANE_CHARGES))
-        Spell::SendCastResult(pPlayer, pSpellInfo, 1, SPELL_FAILED_NOT_ON_GROUND);
+        Spell::SendCastResult(pPlayer, pSpellInfo, 1, SPELL_FAILED_ERROR);
 
     return true;
 }
Index: scripts/world/npcs_special.cpp
===================================================================
--- scripts/world/npcs_special.cpp	(revision 1682)
+++ scripts/world/npcs_special.cpp	(working copy)
@@ -733,9 +733,6 @@
 
             if (Patient)
             {
-                //303, this flag appear to be required for client side item->spell to work (TARGET_SINGLE_FRIEND)
-                Patient->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PVP_ATTACKABLE);
-
                 Patients.push_back(Patient->GetGUID());
                 ((npc_injured_patientAI*)Patient->AI())->Doctorguid = m_creature->GetGUID();
 
